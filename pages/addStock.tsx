// pages/index.tsx
import Head from "next/head";
import styles from "@/styles/Home.module.css";
import React, { useState } from "react";
    // @ts-ignore
import DateTimePicker from "react-datetime-picker/dist/entry.nostyle";
import Link from "next/link";

const AddStock = () => {
  const [ticker, setTicker] = useState("");
  const [openPrice, setOpenPrice] = useState("");
  const [closePrice, setClosePrice] = useState("");
  const [date, setDate] = useState("");

  const addStockData = () => {
    const date_time: string = Date.parse(date).toString(); //converts to epoch string

    const stockData = {
      ticker: ticker,
      open_price: openPrice,
      close_price: closePrice,
      date_time: date_time,
    };

    console.log({ stockData });
    fetch(
      "https://rmlqm75bw7.execute-api.us-west-1.amazonaws.com/api/v1/stock",
      {
        method: "POST",
        mode: "cors",

        headers: {
          "Content-Type": "application/json",
        },
        body: JSON.stringify(stockData),
      }
    ).catch((error) => {
      console.error("Error:", error);
    });
  };
  return (
    <div className={styles.page}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={styles.description}>
        <button className="bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded">
          <Link href="/"> Home</Link>
        </button>
        <p>
          created with &nbsp;
          <code className={styles.code}>
            CDK, ExpressJs, Docker, and Next.js
          </code>
        </p>
      </div>

      <div className={styles.center}>
        <form
          action="/send-data-here"
          method="post"
          style={{ display: "flex", flexDirection: "column" }}
        >
          <label>Ticker:</label>
          <input
            value={ticker}
            onChange={(e) => setTicker(e.target.value)}
            type="text"
            className="form-control p-2 mr-2  border-solid border-2 rounded-2xl focus:outline-none placeholder:text-black "
          />
          <label>Open Price:</label>
          <input
            value={openPrice}
            onChange={(e) => setOpenPrice(e.target.value)}
            type="text"
            className="form-control p-2 mr-2  border-solid border-2 rounded-2xl focus:outline-none placeholder:text-black "
          />
          <label>Close Price:</label>
          <input
            value={closePrice}
            onChange={(e) => setClosePrice(e.target.value)}
            type="text"
            className="form-control p-2 mr-2  border-solid border-2 rounded-2xl focus:outline-none placeholder:text-black "
          />
          <label>Date & Time:</label>
          <DateTimePicker onChange={setDate} value={date} />

          <button
            className="bg-transparent hover:bg-blue-500 text-blue-700 font-semibold hover:text-white py-2 px-4 border border-blue-500 hover:border-transparent rounded mt-5"
            onClick={(e) => {
              e.preventDefault();
              addStockData();
            }}
            type="submit"
          >
            Submit
          </button>
        </form>
      </div>
    </div>
  );
};

export default AddStock;
